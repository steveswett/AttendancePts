REM /**
REM  * AttendPtsTransDataAPI.bbj
REM  * @author stevett
REM  *
REM  */


REM  Performance improvements needed.  This does an SQL open, prepare, execute, close each time a config var is requested.
REM  Currently under time constraints, so not done now (7/22/15).


rem *- - - - - - - - - - CONSTANTS - - - - - - - - - -*

rem  This section never runs for multi-entry point called programs, so subroutine "setup_constants" is called
rem  for each entry point.


rem *- - - - - - - - - - FUNCTIONS - - - - - - - - - -*

functions:



rem *- - - - - - - - - - ENTRY POINTS - - - - - - - - - -*

entry_points:

get_erp_values:

    enter policyCodeIn$, wfmrExceptionDefIdIn, recordFoundOut, erpPtsCodeOut$, erpStatusOut$, erpPtsAssessedOut, erpNoteOut$
    
    gosub setup_constants
    gosub open_sql_channels
    gosub prepare_sql_stmts
    gosub get_record_values
    gosub close_sql_channels
    
    exit


rem *- - - - - - - - - - SUBROUTINES - - - - - - - - - -*

subroutines:


REM  ------------------------------
REM  setup_constants
REM  ------------------------------

setup_constants:

    TRUE = 1
    FALSE = 0

    ATTEND_PTS_DATA_SOURCE$ = "Steve-Local"
    
    GET_TRANS_VALUES_SELECT_STMT$ = "select erp_cd, erp_sts, erp_pts_assess, erp_note from attend_pts_trans " +
:                                   "where policy_cd = ? and wfmr_exc_id = ?"
    
    return


REM  ------------------------------
REM  open_sql_channels
REM  ------------------------------

open_sql_channels:

    getTransDataChannel = sqlunt
    sqlopen(getTransDataChannel) ATTEND_PTS_DATA_SOURCE$
    
    return


REM  ------------------------------
REM  prepare_sql_stmts
REM  ------------------------------

prepare_sql_stmts:

    sqlprep(getTransDataChannel) GET_TRANS_VALUES_SELECT_STMT$

    return


REM  ------------------------------
REM  get_record_values
REM  ------------------------------

get_record_values:

    sqlexec(getTransDataChannel) policyCodeIn$, wfmrExceptionDefIdIn
    dim translationResultRow$:sqltmpl(getTransDataChannel)
    translationResultRow$ = sqlfetch(getTransDataChannel,err=row_not_found)
    goto row_found
    
    row_not_found:
    
    recordFoundOut = FALSE
    erpPtsCodeOut$ = ""
    erpStatusOut$ = ""
    erpPtsAssessedOut = 0
    erpNoteOut$ = ""
    goto end_get_record_values
    
    row_found:
    
    recordFoundOut = TRUE
    erpPtsCodeOut$ = translationResultRow.erp_cd$
    erpStatusOut$ = translationResultRow.erp_sts$
    erpPtsAssessedOut = translationResultRow.erp_pts_assess
    erpNoteOut$ = translationResultRow.erp_note$
    goto end_get_record_values
    
    end_get_record_values:
    
    return


REM  ------------------------------
REM  close_sql_channels
REM  ------------------------------

close_sql_channels:

    sqlclose(getTransDataChannel)

    return    
    

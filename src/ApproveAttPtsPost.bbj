REM /**
REM  * ApproveAttPtsPost.bbj
REM  * @author stevett
REM  *
REM  * Written: July 2015
REM  * 
REM  * Description: Post records summary/result screen for Supervisor Approval of Attendance Points.
REM  *
REM  */

use java.util.LinkedHashMap
use java.util.HashMap

declare java.util.LinkedHashMap attPtsWorkRecordsMap!
declare java.util.HashMap attPtsWorkDataMap!
declare java.util.HashMap postingStatsMap!
declare java.util.HashMap qtysInsertedMap!
declare java.util.HashMap qtysUpdatedMap!

enter shiftIn$, deptIdIn, deptNameIn$, dateIn!, attPtsWorkRecordsMap!


rem *- - - - - - - - - - CONSTANTS - - - - - - - - - -*

constants:


TRUE = 1
FALSE = 0

RGB_WHITE_ON_BLUE$= $033F$
RGB_YELLOW_ON_BLUE$ = $033C$

RECORDS_PER_PAGE = 1
COLUMNS_PER_PAGE = 1
RECORDS_PER_COLUMN = 1
ROWS_PER_RECORD = 1
START_ROW_FOR_LIST = 0
END_ROW_FOR_LIST = START_ROW_FOR_LIST + RECORDS_PER_COLUMN - 1 
SHOW_FIELD_TERMINATOR_PRESSED = FALSE

ERP_CODE_FIELD_NO = 1
ERP_DESCR_FIELD_NO = 2
ERP_PTS_FIELD_NO = 3
ERP_STS_FIELD_NO = 4
HIDDEN_FIELD_NO = 5


REM     Note about INPUTE:
REM     
REM     Any value less than 63 will cause the input function to exit setting the CTL value to the function value. 
REM     The "help" function causes an exit with CTL=-1.


F2_CUSTOM_INPUT_VALUE$ = $81$
F2_CTL_OUTPUT_VALUE$ = $02$

F3_CUSTOM_INPUT_VALUE$ = $82$
F3_CTL_OUTPUT_VALUE$ = $03$

F4_CUSTOM_INPUT_VALUE$ = $83$
F4_CTL_OUTPUT_VALUE$ = $04$

TAB_CUSTOM_INPUT_VALUE$ = $09$
TAB_CTL_OUTPUT_VALUE$ = $19$

BACKTAB_CUSTOM_INPUT_VALUE$ = $15$
BACKTAB_CTL_OUTPUT_VALUE$ = $1A$

PAGE_UP_CUSTOM_INPUT_VALUE$ = $84$
PAGE_UP_CTL_OUTPUT_VALUE$ = $1B$

PAGE_DOWN_CUSTOM_INPUT_VALUE$ = $85$
PAGE_DOWN_CTL_OUTPUT_VALUE$ = $1C$


rem *- - - - - - - - - - FUNCTIONS - - - - - - - - - -*

functions:


rem *- - - - - - - - - - MAIN ROUTINE - - - - - - - - - -*

main_routine:

    gosub init
    
    gosub run_posting
    
    gosub display_data
    
    gosub handle_input


rem *- - - - - - - - - - EOJ - - - - - - - - - -*

eoj:

    exit


rem *- - - - - - - - - - SUBROUTINES - - - - - - - - - -*


    rem ------------------------------------------------------------------------------------------
    rem  One-time intialization
    rem ------------------------------------------------------------------------------------------

    
init:

        rem  The 'ET' (end type ahead control) below is VERY IMPORTANT when using SHIFT+TAB.  Without it, each
        rem  SHIFT+TAB would actually be treated as two inputs: SHIFT+TAB followed by TAB.

    print 'UC', 'CS', 'ET'
    
        rem Set color.  In the following, $03$ is the background (blue) and $3F$ is the foreground (white).
        rem The bits for that were: 0 0 1 1 1 1 1 1  (<-- foreground)   0 0 0 0 0 0 1 1  (<-- background)
        
    print 'RGB'(RGB_WHITE_ON_BLUE$)
    rem print 'RGB'($033C$);   rem blue background, yellow foreground
    rem print 'RGB'($0330$);   rem blue background, red foreground
    
    print 'CURSOR'("rep_block");   rem This only works in BBj -- not Pro/5


        rem For info on function key programming, see this article: http://www.basis.com/kb00025
        rem Also see Basis help: PRO/5 > User's Ref > Character Devices > Terminals > Function and Edit Keys
    
        rem Below is how the 'FL' (function keys) and 'EL' (edit keys) mnemonics are used to assign a key a value
        
        rem "2" - load only one key
        rem $01$ - means the F2 key (0-based)
        rem chr(1) - means the custom value of the function key is 1 byte long
        rem F2_CUSTOM_INPUT_VALUE$ - is the custom INPUT value of the key
        
    print 'FL', "2", $01$, chr(1), F2_CUSTOM_INPUT_VALUE$,
    print 'FL', "2", $02$, chr(1), F3_CUSTOM_INPUT_VALUE$,
    print 'FL', "2", $03$, chr(1), F4_CUSTOM_INPUT_VALUE$,
    print 'EL', "2", $3C$, chr(1), BACKTAB_CUSTOM_INPUT_VALUE$,    
    print 'EL', "2", $06$, chr(1), PAGE_UP_CUSTOM_INPUT_VALUE$,
    print 'EL', "2", $07$, chr(1), PAGE_DOWN_CUSTOM_INPUT_VALUE$,
    
    f2Pair$ = F2_CUSTOM_INPUT_VALUE$ + F2_CTL_OUTPUT_VALUE$
    f3Pair$ = F3_CUSTOM_INPUT_VALUE$ + F3_CTL_OUTPUT_VALUE$
    f4Pair$ = F4_CUSTOM_INPUT_VALUE$ + F4_CTL_OUTPUT_VALUE$
    pageupPair$ = PAGE_UP_CUSTOM_INPUT_VALUE$ + PAGE_UP_CTL_OUTPUT_VALUE$
    pagedownPair$ = PAGE_DOWN_CUSTOM_INPUT_VALUE$ + PAGE_DOWN_CTL_OUTPUT_VALUE$
    tabPair$ = TAB_CUSTOM_INPUT_VALUE$ + TAB_CTL_OUTPUT_VALUE$
    backtabPair$ = BACKTAB_CUSTOM_INPUT_VALUE$ + BACKTAB_CTL_OUTPUT_VALUE$
    
    resultIgnored$ = stbl("!TERMS", f2Pair$ + f4Pair$ + f3Pair$ + pageupPair$ + pagedownPair$ + tabPair$ + backtabPair$ + stbl("!TERMS"))
    resultIgnored$ = stbl("!EDIT", f2Pair$ + f4Pair$ + f3Pair$ + pageupPair$ + pagedownPair$ + tabPair$ + backtabPair$ + stbl("!EDIT"))

    return


    rem ------------------------------------------------------------------------------------------
    rem  Run the posting process
    rem ------------------------------------------------------------------------------------------


run_posting:

    call "TerminalUtilities.bbj::display_please_wait", "posting"

    postingStatsMap! = new java.util.HashMap()
    call "AttendPtsDAO.bbj::post_work_records", attPtsWorkRecordsMap!, postingStatsMap! 

    return


    rem ------------------------------------------------------------------------------------------
    rem  Display the screen headings
    rem ------------------------------------------------------------------------------------------


display_screen_headings:

    call "TerminalUtilities.bbj::display_screen_headings", pgm(-2), "SUPERVISOR APPROVAL OF POINTS" 

    return

    
    rem ------------------------------------------------------------------------------------------
    rem  Display data on page, besides page headings
    rem ------------------------------------------------------------------------------------------

    
display_data:

    print @(0,0), 'CE', 'UC'
    
    gosub display_screen_headings
    
    unformattedDate$ = dateIn!
    call "DateUtilities.bbj::get_yymd_as_mdy_with_day_name", unformattedDate$, formattedExcDate$
    
    qtysInsertedMap! = cast( java.util.HashMap, postingStatsMap!.get("qtys_inserted_map") )
    qtysUpdatedMap! = cast( java.util.HashMap, postingStatsMap!.get("qtys_updated_map") )
    qtySaved = postingStatsMap!.get("qty_saved")
    qtyPosted = postingStatsMap!.get("qty_posted")
    qtyNotPosted = qtySaved - qtyPosted
    qtyChangedWarningLevels = postingStatsMap!.get("qty_changed_warning_levels")
    
    
    print @(0,3), "Dept: ", deptNameIn$
    print @(71,3), "Shift: ", shiftIn$
    
    print @(0,5), formattedExcDate$ 

    print @(0,7), "POSTING SUMMARY:"
    print @(18, 8), str(qtySaved:"##0"), " work file record(s) changed"
    print @(18, 9), str(qtysInsertedMap!.get("A"):"##0"), " record(s) posted as approved (new)"
    print @(18, 10), str(qtysUpdatedMap!.get("A"):"##0"), " record(s) posted as approved (updated)"
    print @(18, 11), str(qtysInsertedMap!.get("E"):"##0"), " record(s) posted as edited (new)"
    print @(18, 12), str(qtysUpdatedMap!.get("E"):"##0"), " record(s) posted as edited (updated)"
    print @(18, 13), str(qtysInsertedMap!.get("F"):"##0"), " record(s) posted as FMLA pending (new)"
    print @(18, 14), str(qtysUpdatedMap!.get("F"):"##0"), " record(s) posted as FMLA pending (updated)"
    print @(18, 15), str(qtyNotPosted:"##0"), " record(s) not posted"

    print @(0,17), "WARNING THRESHOLDS:"
    print @(18, 18), str(qtyChangedWarningLevels:"##0"), " employee(s) reached a new warning level just now"
    
    if qtyChangedWarningLevels > 0 then
        print @(20, 20), "An e-mail containing details has been sent to you."
    endif
    
    actionLabel$ = "F4=Exit   "
    
    print @(2,21), actionLabel$ 
    
    if SHOW_FIELD_TERMINATOR_PRESSED then print @(5,22), 'CL', "Field terminator (savedCTL): ", savedCTL

    return

    
    rem ------------------------------------------------------------------------------------------
    rem  Handle input, which will be F4 or Enter
    rem ------------------------------------------------------------------------------------------

    
handle_input:

    inpute 0, 21, 1, "", ignoreInput$
    
    return

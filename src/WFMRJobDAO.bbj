REM /**
REM  * WFMRJobDAO.bbj
REM  * @author stevett
REM  *
REM  * Written: July 2015
REM  * 
REM  * Description: Data Access Object for WFMR table lab_job
REM  *
REM  */


rem *- - - - - - - - - - CONSTANTS - - - - - - - - - -*

rem  This section never runs for multi-entry point called programs, so subroutine "setup_constants" is called
rem  for each entry point.


rem *- - - - - - - - - - FUNCTIONS - - - - - - - - - -*

functions:



rem *- - - - - - - - - - ENTRY POINTS - - - - - - - - - -*

entry_points:


get_name:

    enter jobIdIn, jobNameOut$
    
    gosub setup_constants
    
    gosub query_for_job_name
    
    exit


rem *- - - - - - - - - - SUBROUTINES - - - - - - - - - -*

subroutines:


REM  ------------------------------
REM  setup_constants
REM  ------------------------------

setup_constants:

    TRUE = 1
    FALSE = 0

    wfmrDataSource$ = ""
    call "ConfigVarsDAO.bbj::get_value", "wfmr.data.source.name", configVarFound, configVarDataType$, wfmrDataSource$
    
    GET_JOB_NAME_SELECT_STMT$ = "select name from lab_job where job_id = ?"
    
    return


REM  ------------------------------
REM  query_for_job_name
REM  ------------------------------

query_for_job_name:

    jobsChannel = sqlunt
    sqlopen(jobsChannel) wfmrDataSource$

    sqlprep(jobsChannel) GET_JOB_NAME_SELECT_STMT$

    jobNameOut$ = ""

    sqlexec(jobsChannel) jobIdIn
    dim resultRow$:sqltmpl(jobsChannel)
    
    resultRow$ = sqlfetch(jobsChannel,err=job_name_not_found)
    jobNameOut$ = cvs(resultRow.name$, 2)
    
    job_name_not_found:
    
    sqlclose(jobsChannel)

    return
